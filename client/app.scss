// Inject Tailwind CSSs base styles, including normalization.
@tailwind base;

// Imports

@import "./node_modules/react-day-picker/lib/style";

.DayPicker {
  @apply bg-white;
  @apply text-gray-900;
  @apply rounded;
  @apply rounded-tr-none;

  .DayPicker-Caption {
    @apply text-green-dark;
  }

  .DayPicker-NavButton {
    @apply text-green-dark;
  }

  .DayPicker-Weekday {
    &:nth-child(6),
    &:nth-child(7) {
      @apply font-bold;
      @apply rounded-none;
      @apply bg-green-lightest;
    }
  }

  .DayPicker-Day {
    @apply rounded-sm;

    &:nth-child(6),
    &:nth-child(7) {
      @apply rounded-none;
      @apply bg-green-lightest;
    }
    
    &.DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
      @apply bg-green-dark;
      @apply text-white;
      @apply font-bold;
    }

    &:hover:not(.DayPicker--interactionDisabled):not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside) {
      @apply bg-green-light;
    }

    &--today {
      @apply text-green-dark;
    }
  }
}


html {
  @apply bg-green-dark; // iPhone X letterbox

  font-family: Roboto, sans-serif;
}

@keyframes loading {
  from { background-position: 0; }
  to { background-position: 100%; }
}

@layer utilities {
  .bg-prediction-gradient {
    background: linear-gradient(
      to left,
      theme("colors.darken.lowest"),
      transparent theme("spacing.20")
    );
  }

  .bg-prediction-gradient--dark {
    background: linear-gradient(
      to left,
      theme("colors.lighten.lower"),
      transparent theme("spacing.20")
    );
  }

  .bg-full {
    background: repeating-linear-gradient(
      135deg,
      theme("colors.darken.lower"),
      theme("colors.darken.lower") 10px,
      theme("colors.darken.lowest") 10px,
      theme("colors.darken.lowest") 20px,
    );
  }

  .bg-full--dark {
    background: repeating-linear-gradient(
      135deg,
      theme("colors.lighten.lower"),
      theme("colors.lighten.lower") 10px,
      theme("colors.lighten.lowest") 10px,
      theme("colors.lighten.lowest") 20px,
    );
  }

  .bg-loaded {
    background: repeating-linear-gradient(
      135deg,
      theme("colors.blue.light"),
      theme("colors.blue.light") 10px,
      theme("colors.blue.lightest") 10px,
      theme("colors.blue.lightest") 20px,
    );
  }

  .bg-loaded--dark {
    background: repeating-linear-gradient(
      135deg,
      theme("colors.blue.dark"),
      theme("colors.blue.dark") 10px,
      theme("colors.blue.darkest") 10px,
      theme("colors.blue.darkest") 20px,
    );
  }

  .bg-loading {
    animation: 10s linear infinte loading;
    background: linear-gradient(
      to right,
      theme("colors.blue.light"),
      theme("colors.blue.light") 100px,
      theme("colors.blue.300") 120px,
      theme("colors.blue.light") 140px,
    );

    &--dark {
      background: linear-gradient(
        to right,
        theme("colors.blue.dark"),
        theme("colors.blue.dark") 50px,
        theme("colors.blue.medium") 100px,
        theme("colors.blue.dark") 150px,
      );
    }
  }
}

// Components
@layer components {
  @import "components/alert";
  @import "components/button";
  @import "components/field";
  @import "components/link";
  @import "components/list";
}

// Inject component classes registered by tailwind plugins
@tailwind components;

// Inject tailwind utility classes
@tailwind utilities;
